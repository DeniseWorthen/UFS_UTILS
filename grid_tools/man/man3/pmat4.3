.TH "pmat4" 3 "Mon Mar 18 2024" "Version 1.13.0" "grid_tools" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pmat4 \- 
.PP
Module for handy vector and matrix operations in Euclidean geometry\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Types"

.in +1c
.ti -1c
.RI "interface \fBabsv\fP"
.br
.ti -1c
.RI "interface \fBaxial\fP"
.br
.ti -1c
.RI "interface \fBaxtoq\fP"
.br
.ti -1c
.RI "interface \fBaxtorot\fP"
.br
.ti -1c
.RI "interface \fBcorral\fP"
.br
.ti -1c
.RI "interface \fBcross_product\fP"
.br
.ti -1c
.RI "interface \fBctoz\fP"
.br
.ti -1c
.RI "interface \fBdet\fP"
.br
.ti -1c
.RI "interface \fBdiag\fP"
.br
.ti -1c
.RI "interface \fBdlltoxy\fP"
.br
.ti -1c
.RI "interface \fBexpmat\fP"
.br
.ti -1c
.RI "interface \fBgram\fP"
.br
.ti -1c
.RI "interface \fBhav\fP"
.br
.ti -1c
.RI "interface \fBhuarea\fP"
.br
.ti -1c
.RI "interface \fBidentity\fP"
.br
.ti -1c
.RI "interface \fBmobius\fP"
.br
.ti -1c
.RI "interface \fBmobiusi\fP"
.br
.ti -1c
.RI "interface \fBmulqq\fP"
.br
.ti -1c
.RI "interface \fBnormalize\fP"
.br
.ti -1c
.RI "interface \fBnormalized\fP"
.br
.ti -1c
.RI "interface \fBorthogonalized\fP"
.br
.ti -1c
.RI "interface \fBouter_product\fP"
.br
.ti -1c
.RI "interface \fBqtoax\fP"
.br
.ti -1c
.RI "interface \fBqtorot\fP"
.br
.ti -1c
.RI "interface \fBqtospin\fP"
.br
.ti -1c
.RI "interface \fBrottoax\fP"
.br
.ti -1c
.RI "interface \fBrottoq\fP"
.br
.ti -1c
.RI "interface \fBrowops\fP"
.br
.ti -1c
.RI "interface \fBsarea\fP"
.br
.ti -1c
.RI "interface \fBsetem\fP"
.br
.ti -1c
.RI "interface \fBsetmobius\fP"
.br
.ti -1c
.RI "interface \fBspintoq\fP"
.br
.ti -1c
.RI "interface \fBtrace\fP"
.br
.ti -1c
.RI "interface \fBtriple_product\fP"
.br
.ti -1c
.RI "interface \fBznfun\fP"
.br
.ti -1c
.RI "interface \fBzntay\fP"
.br
.ti -1c
.RI "interface \fBztoc\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "real(dp) function, dimension(3) \fBaxial33_d\fP (b)"
.br
.RI "\fIReturn the 3-vector corresponding to the given antisymmetric 'axial vector' matrix, assuming a right-handed correspondence\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(3) \fBaxial33_s\fP (b)"
.br
.RI "\fIReturn the 3-vector corresponding to the given antisymmetric 'axial vector' matrix, assuming a right-handed correspondence\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(3, 3) \fBaxial3_d\fP (a)"
.br
.RI "\fIReturn the axial 'vector', as an antisymmetric matrix, corresponding to the given 3-vector assuming a right-handed correspondence\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(3, 3) \fBaxial3_s\fP (a)"
.br
.RI "\fIReturn the axial 'vector', as an antisymmetric matrix, corresponding to the given 3-vector assuming a right-handed correspondence\&. \fP"
.ti -1c
.RI "subroutine, public \fBaxtoq\fP (v, q)"
.br
.RI "\fIGo from an axial 3-vector to its equivalent quaternion\&. \fP"
.ti -1c
.RI "subroutine, public \fBaxtorot\fP (ax3, orth33)"
.br
.RI "\fIConstruct the 3*3 orthogonal matrix, orth33, that corresponds to the proper rotation encoded by the 3-vector, ax3\&. \fP"
.ti -1c
.RI "subroutine, public \fBcorral\fP (m, n, mask, a, d, aa, e)"
.br
.RI "\fIFind positive diagonals D and E and a Lagrange multiplier F that minimize the row-sum +column-sum of masked terms, (D_i +log(|A_ij|) +E_j)^2 subject to the single constraint, sum_j E_j =0, where the mask permits only nonnegligible A_ij to participate in the quadratic quantities\&. \fP"
.ti -1c
.RI "subroutine, public \fBctoz\fP (v, z, infz)"
.br
.RI "\fIUtility codes for various Mobius transformations\&. \fP"
.ti -1c
.RI "real(dp) function \fBdet_d\fP (a)"
.br
.RI "\fIReturn the determinant of a double precision matrix\&. \fP"
.ti -1c
.RI "integer(spi) function \fBdet_i\fP (a)"
.br
.RI "\fIReturn the determinant of a single precision integer matrix\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(size(a), 
.br
size(a)) \fBdiagn_d\fP (a)"
.br
.RI "\fIReturn the diagonal matrix whose elements are the given vector\&. \fP"
.ti -1c
.RI "integer(spi) function, 
.br
dimension(size(a), size(a)) \fBdiagn_i\fP (a)"
.br
.RI "\fIReturn the diagonal matrix whose elements are the given vector\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(size(a), 
.br
size(a)) \fBdiagn_s\fP (a)"
.br
.RI "\fIReturn the diagonal matrix whose elements are the given vector\&. \fP"
.ti -1c
.RI "subroutine \fBdlltoxy_d\fP (rlat, drlat, drlon, x2)"
.br
.RI "\fIFrom a reference latitude, and increments of latitude and longitude, return the local cartesian 2-vector corresponding to the projection of the increment onto the tangent plane of the reference point\&. \fP"
.ti -1c
.RI "real(sp) function \fBdqarea_s\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "\fICompute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C in turn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. \fP"
.ti -1c
.RI "real(dp) function \fBdtarea_d\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "\fICompute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. \fP"
.ti -1c
.RI "subroutine, public \fBexpmat\fP (n, a, b, detb)"
.br
.RI "\fIEvaluate the exponential, B, of a matrix, A, of degree n\&. \fP"
.ti -1c
.RI "subroutine \fBexpmatd\fP (n, a, b, bd, detb, detbd)"
.br
.RI "\fILike expmat, but for the 1st derivatives also\&. \fP"
.ti -1c
.RI "subroutine \fBexpmatdd\fP (n, a, b, bd, bdd, detb, detbd, detbdd)"
.br
.RI "\fILike expmat, but for the 1st and 2nd derivatives also\&. \fP"
.ti -1c
.RI "subroutine \fBgram_d\fP (as, b, nrank, \fBdet\fP)"
.br
.RI "\fIApply a form of Gram-Schmidt orthogonalization process to return as many normalized orthogonal basis column vectors in matrix B as possible in the space spanned by the columns of matrix A\&. \fP"
.ti -1c
.RI "subroutine \fBgram_s\fP (as, b, nrank, \fBdet\fP)"
.br
.RI "\fIApply a form of Gram-Schmidt orthogonalization process to return as many normalized orthogonal basis column vectors in matrix B as possible in the space spanned by the columns of matrix A\&. \fP"
.ti -1c
.RI "subroutine \fBgraml_d\fP (as, b, nrank, detsign, ldet)"
.br
.RI "\fIA version of gram_d where the determinant information is returned in logarithmic form (to avoid overflows for large matrices)\&. \fP"
.ti -1c
.RI "real(dp) function \fBhav_d\fP (t)"
.br
.RI "\fIHaversine function in double precision\&. \fP"
.ti -1c
.RI "real(sp) function \fBhav_s\fP (t)"
.br
.RI "\fIHaversine function in single precision\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(0:3), 
.br
public \fBmulqq\fP (a, b)"
.br
.RI "\fIMultiply quaternions, a*b, assuming operation performed from right to left\&. \fP"
.ti -1c
.RI "subroutine \fBnormalize_d\fP (v)"
.br
.RI "\fINormalize the given double precision real vector\&. \fP"
.ti -1c
.RI "subroutine \fBnormalize_s\fP (v)"
.br
.RI "\fINormalize the given single precision real vector\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(size(a)) \fBnormalized_d\fP (a)"
.br
.RI "\fIReturn the normalized version of a double precision real vector\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(size(u)) \fBorthogonalized_s\fP (u, a)"
.br
.RI "\fIReturn the part of vector a that is orthogonal to unit vector u\&. \fP"
.ti -1c
.RI "subroutine \fBplaingram_d\fP (b, nrank)"
.br
.RI "\fIA 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. \fP"
.ti -1c
.RI "subroutine \fBplaingram_s\fP (b, nrank)"
.br
.RI "\fIA 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. \fP"
.ti -1c
.RI "subroutine, public \fBqtoax\fP (q, v)"
.br
.RI "\fIGo from quaternion to axial 3-vector\&. \fP"
.ti -1c
.RI "subroutine, public \fBqtorot\fP (q, rot)"
.br
.RI "\fIGo from quaternion to rotation matrix representations\&. \fP"
.ti -1c
.RI "subroutine, public \fBqtospin\fP (q, cspin)"
.br
.RI "\fIGo from the unit quaternion to the complex spinor representation\&. \fP"
.ti -1c
.RI "subroutine, public \fBrottoax\fP (orth33, ax3)"
.br
.RI "\fIAssuming that given orth33 is a 3*3 proper rotation matrix, derive an axial 3-vector, ax3, such that orth33 is implied by ax3 when the latter is interpreted as encoding a rotation (as in subroutine axtorot)\&. \fP"
.ti -1c
.RI "subroutine, public \fBrottoq\fP (rot, q)"
.br
.RI "\fIGo from rotation matrix to a corresponding unit quaternion representation\&. \fP"
.ti -1c
.RI "subroutine \fBrowgram\fP (m, n, a, ipiv, tt, b, rank)"
.br
.RI "\fIWithout changing (tall) rectangular input matrix a, perform pivoted gram- Schmidt operations to orthogonalize the rows, until rows that remain become negligible\&. \fP"
.ti -1c
.RI "subroutine, public \fBrowops\fP (m, n, ipiv, tt, v, vv)"
.br
.RI "\fIApply the row-operations, implied by ipiv and tt returned by rowgram, to the single column vector, v, to produce the transformed vector vv\&. \fP"
.ti -1c
.RI "subroutine, public \fBsetmobius\fP (xc0, xc1, xc2, aa, bb, cc, dd)"
.br
.RI "\fIFind the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, for a standard (north-)polar stereographic transformation that takes cartesian point, xc0 to the north pole, xc1 to (lat=0,lon=0), xc2 to the south pole (=complex infinity)\&. \fP"
.ti -1c
.RI "subroutine, public \fBspintoq\fP (cspin, q)"
.br
.RI "\fIGo from the complex spinor matrix to the unit quaternion representation\&. \fP"
.ti -1c
.RI "subroutine, public \fBznfun\fP (n, z, zn, znd, zndd, znddd)"
.br
.RI "\fIFor a given nonnegative integer n and real argument z, evaluate the nth,\&.\&.\&.,(n+3)th derivatives, wrt z, of the function C(z) = cosh(sqrt(2z)) or, equivalently, of C(z) = cos(sqrt(-2z)), according to the sign of z\&. \fP"
.ti -1c
.RI "subroutine, public \fBzntay\fP (n, z, zn)"
.br
.RI "\fIEvaluate, by Taylor-Maclaurin expansion, the nth-derivative of the function, C(z)=cosh(sqrt(2z)), or equiavlently, of C(z)=cos(sqrt(-2z))\&. \fP"
.ti -1c
.RI "subroutine, public \fBztoc\fP (z, infz, v)"
.br
.RI "\fIGiven a complex z, return the equivalent cartesian unit 3-vector associated by the polar stereographic projection\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "real(dp) function \fBabsv_d\fP (a)"
.br
.RI "\fIReturn the absolute magnitude of a double precision real vector\&. \fP"
.ti -1c
.RI "real(sp) function \fBabsv_s\fP (a)"
.br
.RI "\fIReturn the absolute magnitude of a single precision real vector\&. \fP"
.ti -1c
.RI "subroutine \fBcmobius\fP (aa, bb, cc, dd, vz, vw)"
.br
.RI "\fIPerform a complex Mobius transformation from cartesian vz to cartesian vw where the transformation coefficients are the standard aa,bb,cc,dd\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(3) \fBcross_product_d\fP (a, b)"
.br
.RI "\fIReturn the cross product of two double precision real 3-vectors\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(3) \fBcross_product_s\fP (a, b)"
.br
.RI "\fIReturn the cross product of two single precision real 3-vectors\&. \fP"
.ti -1c
.RI "integer(dpi) function \fBdet_id\fP (a)"
.br
.RI "\fIReturn the determinant of a double precision integer matrix\&. \fP"
.ti -1c
.RI "real(sp) function \fBdet_s\fP (a)"
.br
.RI "\fIReturn the determinant of a single precision matrix\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(size(b, 1)) \fBdiagnn_d\fP (b)"
.br
.RI "\fIReturn the vector whose elements are the diagonal ones of a given matrix\&. \fP"
.ti -1c
.RI "integer(spi) function, 
.br
dimension(size(b, 1)) \fBdiagnn_i\fP (b)"
.br
.RI "\fIReturn the vector whose elements are the diagonal ones of a given matrix\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(size(b, 1)) \fBdiagnn_s\fP (b)"
.br
.RI "\fIReturn the vector whose elements are the diagonal ones of a given matrix\&. \fP"
.ti -1c
.RI "subroutine \fBdlltoxy_s\fP (rlat, drlat, drlon, x2)"
.br
.RI "\fIFrom a reference latitude, and increments of latitude and longitude, return the local cartesian 2-vector corresponding to the projection of the increment onto the tangent plane of the reference point\&. \fP"
.ti -1c
.RI "real(dp) function \fBdqarea_d\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "\fICompute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C in turn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. \fP"
.ti -1c
.RI "real(sp) function \fBdtarea_s\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "\fICompute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. \fP"
.ti -1c
.RI "real(dp) function \fBhuarea_d\fP (sa, sb)"
.br
.RI "\fISpherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb, sphere of unit radius\&. \fP"
.ti -1c
.RI "real(sp) function \fBhuarea_s\fP (sa, sb)"
.br
.RI "\fISpherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb, sphere of unit radius\&. \fP"
.ti -1c
.RI "integer(spi) function, 
.br
dimension(3, 3) \fBidentity3_i\fP ()"
.br
.RI "\fIReturn the 3-dimensional integer identity matrix\&. \fP"
.ti -1c
.RI "integer(spi) function, 
.br
dimension(n, n) \fBidentity_i\fP (n)"
.br
.RI "\fIReturn the integer identity matrix for a given dimensionality\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(size(a)) \fBnormalized_s\fP (a)"
.br
.RI "\fIReturn the normalized version of a single precision real vector\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(size(u)) \fBorthogonalized_d\fP (u, a)"
.br
.RI "\fIReturn the part of vector a that is orthogonal to unit vector u\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(size(a), 
.br
size(b)) \fBouter_product_d\fP (a, b)"
.br
.RI "\fIReturn the outer product matrix of two double precision real vectors\&. \fP"
.ti -1c
.RI "integer(spi) function, 
.br
dimension(size(a), size(b)) \fBouter_product_i\fP (a, b)"
.br
.RI "\fIReturn the outer product matrix of two integer vectors\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(size(a), 
.br
size(b)) \fBouter_product_s\fP (a, b)"
.br
.RI "\fIReturn the outer product matrix of two single precision real vectors\&. \fP"
.ti -1c
.RI "real(dp) function \fBsarea_d\fP (v1, v2, v3)"
.br
.RI "\fICompute the area of the spherical triangle, {v1,v2,v3}\&. \fP"
.ti -1c
.RI "real(sp) function \fBsarea_s\fP (v1, v2, v3)"
.br
.RI "\fICompute the area of the spherical triangle, {v1,v2,v3}, measured in the right-handed sense, by dropping a perpendicular to u0 on the longest side so that the area becomes the sum of areas of the two simpler right-angled triangles\&. \fP"
.ti -1c
.RI "subroutine \fBsetem\fP (c, d, e, g, r)"
.br
.RI "\fIGiven the 4 components of a unit quaternion, return the associated 3*3 rotation matrix\&. \fP"
.ti -1c
.RI "real(dp) function \fBtrace_d\fP (b)"
.br
.RI "\fIReturn the trace of a given double precision real matrix\&. \fP"
.ti -1c
.RI "integer(spi) function \fBtrace_i\fP (b)"
.br
.RI "\fIReturn the trace of a given integer matrix\&. \fP"
.ti -1c
.RI "real(sp) function \fBtrace_s\fP (b)"
.br
.RI "\fIReturn the trace of a given single precision real matrix\&. \fP"
.ti -1c
.RI "real(dp) function, dimension(4) \fBtriple_cross_product_d\fP (u, v, w)"
.br
.RI "\fIReturn the triple_cross_product for 4-vectors\&. \fP"
.ti -1c
.RI "real(sp) function, dimension(4) \fBtriple_cross_product_s\fP (u, v, w)"
.br
.RI "\fIDeliver the triple-cross-product, x, of the three 4-vectors, u, v, w, with the sign convention that ordered, {u,v,w,x} form a right-handed quartet in the generic case (determinant >= 0)\&. \fP"
.ti -1c
.RI "real(dp) function \fBtriple_product_d\fP (a, b, c)"
.br
.RI "\fIReturn the triple product of three double precision real 3-vectors\&. \fP"
.ti -1c
.RI "real(sp) function \fBtriple_product_s\fP (a, b, c)"
.br
.RI "\fIReturn the triple product of three single precision real 3-vectors\&. \fP"
.ti -1c
.RI "subroutine \fBzmobius\fP (aa, bb, cc, dd, z, infz, w, infw)"
.br
.RI "\fIPerform a complex Mobius transformation from (z,infz) to (w,infw) where the transformation coefficients are the standard aa,bb,cc,dd\&. \fP"
.ti -1c
.RI "subroutine \fBzmobiusi\fP (aa, bb, cc, dd, zz, infz, zw, infw)"
.br
.RI "\fIPerform the inverse of the mobius transformation with coefficients, {aa,bb,cc,dd}\&. \fP"
.ti -1c
.RI "subroutine \fBzsetmobius\fP (z0, infz0, z1, infz1, z2, infz2, aa, bb, cc, dd)"
.br
.RI "\fIFind the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, that takes polar stereographic point, z0 to the north pole, z1 to (lat=0,lon=0), z2 to the south pole (=complex infinity)\&. \fP"
.ti -1c
.RI "subroutine \fBztocd\fP (z, infz, v, vd)"
.br
.RI "\fIThe convention adopted for the complex derivative is that, for a complex infinitesimal map displacement, delta_z, the corresponding infinitesimal change of cartesian vector position is delta_v given by: delta_v = Real(vd*delta_z)\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Module for handy vector and matrix operations in Euclidean geometry\&. 

This package is primarily intended for 3D operations and three of the functions (Cross_product, Triple_product and Axial) do not possess simple generalizations to a generic number N of dimensions\&. The others, while admitting such N-dimensional generalizations, have not all been provided with such generic forms here at the time of writing, though some of these may be added at a future date\&.
.PP
May 2017: Added routines to facilitate manipulation of 3D rotations, their representations by axial vectors, and routines to compute the exponentials of matrices (without resort to eigen methods)\&. Also added Quaternion and spinor representations of 3D rotations, and their conversion routines\&. FUNCTION:
.IP "\(bu" 2
absv: Absolute magnitude of vector as its euclidean length
.IP "\(bu" 2
Normalized: Normalized version of given real vector
.IP "\(bu" 2
Orthogonalized: Orthogonalized version of second vector rel\&. to first unit v\&.
.IP "\(bu" 2
Cross_product: Vector cross-product of the given 2 vectors
.IP "\(bu" 2
Outer_product: outer-product matrix of the given 2 vectors
.IP "\(bu" 2
Triple_product: Scalar triple product of given 3 vectors
.IP "\(bu" 2
Det: Determinant of given matrix
.IP "\(bu" 2
Axial: Convert axial-vector <--> 2-form (antisymmetric matrix)
.IP "\(bu" 2
Diag: Diagnl of given matrix, or diagonal matrix of given elements
.IP "\(bu" 2
Trace: Trace of given matrix
.IP "\(bu" 2
Identity: Identity 3*3 matrix, or identity n*n matrix for a given n
.IP "\(bu" 2
Sarea: Spherical area subtended by three vectors, or by lat-lon increments forming a triangle or quadrilateral
.IP "\(bu" 2
Huarea: Spherical area subtended by right-angled spherical triangle SUBROUTINE:
.IP "\(bu" 2
Gram: Right-handed orthogonal basis and rank, nrank\&. The first nrank basis vectors span the column range of matrix given, OR ('plain' version) simple unpivoted Gram-Schmidt of a square matrix\&.
.PP
In addition, we include routines that relate to stereographic projections and some associated mobius transformation utilities, since these complex operations have a strong geometrical flavor\&.
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP

.PP
Definition at line 45 of file pmat4\&.f90\&.
.SH "Member Function/Subroutine Documentation"
.PP 
.SS "real(dp) function pmat4::absv_d (real(dp), dimension(:), intent(in)a)\fC [private]\fP"

.PP
Return the absolute magnitude of a double precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
s result, double precision real scalar 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 130 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::absv_s (real(sp), dimension(:), intent(in)a)\fC [private]\fP"

.PP
Return the absolute magnitude of a single precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
s result, single precision real scalar 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 118 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(3) pmat4::axial33_d (real(dp), dimension(3,3), intent(in)b)"

.PP
Return the 3-vector corresponding to the given antisymmetric 'axial vector' matrix, assuming a right-handed correspondence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input antisymmetric matrix 'axial vector' B 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, 3-vector corresponding to B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 461 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(3) pmat4::axial33_s (real(sp), dimension(3,3), intent(in)b)"

.PP
Return the 3-vector corresponding to the given antisymmetric 'axial vector' matrix, assuming a right-handed correspondence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input antisymmetric matrix 'axial vector' B 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, 3-vector corresponding to B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 447 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(3,3) pmat4::axial3_d (real(dp), dimension(3), intent(in)a)"

.PP
Return the axial 'vector', as an antisymmetric matrix, corresponding to the given 3-vector assuming a right-handed correspondence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector A 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, antisymmetrix 'axial vector' matrix corresponding to A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 433 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(3,3) pmat4::axial3_s (real(sp), dimension(3), intent(in)a)"

.PP
Return the axial 'vector', as an antisymmetric matrix, corresponding to the given 3-vector assuming a right-handed correspondence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector A 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, antisymmetrix 'axial vector' matrix corresponding to A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 419 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::axtoq\fP (real(dp), dimension(3), intent(in)v, real(dp), dimension(0:3), intent(out)q)"

.PP
Go from an axial 3-vector to its equivalent quaternion\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP axial 3-vector 
.br
\fIq\fP quaternion 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1657 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::axtorot\fP (real(dp), dimension(3), intent(in)ax3, real(dp), dimension(3,3), intent(out)orth33)"

.PP
Construct the 3*3 orthogonal matrix, orth33, that corresponds to the proper rotation encoded by the 3-vector, ax3\&. The antisymmetric matrix ax33 equivalent to the axial vector ax3 is exponentiated to obtain orth33\&.
.PP
\fBParameters:\fP
.RS 4
\fIax3\fP axial 3-vector 
.br
\fIorth33\fP 3*3 orthogonal matrix 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1547 of file pmat4\&.f90\&.
.SS "subroutine pmat4::cmobius (complex(dpc), intent(in)aa, complex(dpc), intent(in)bb, complex(dpc), intent(in)cc, complex(dpc), intent(in)dd, real(dp), dimension(3), intent(in)vz, real(dp), dimension(3), intent(out)vw)\fC [private]\fP"

.PP
Perform a complex Mobius transformation from cartesian vz to cartesian vw where the transformation coefficients are the standard aa,bb,cc,dd\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaa\fP Mobius transformation coefficient 
.br
\fIbb\fP Mobius transformation coefficient 
.br
\fIcc\fP Mobius transformation coefficient 
.br
\fIdd\fP Mobius transformation coefficient 
.br
\fIvz\fP Cartesian unit 3-vector representation of input argument 
.br
\fIvw\fP Cartesian unit 3-vector representation of output 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2311 of file pmat4\&.f90\&.
.PP
References pmat4::mobius::zmobius()\&.
.SS "subroutine, public \fBpmat4::corral\fP (integer(spi), intent(in)m, integer(spi), intent(in)n, logical, dimension(m,n), intent(in)mask, real(dp), dimension(m,n), intent(in)a, real(dp), dimension(m  ), intent(out)d, real(dp), dimension(m,n), intent(out)aa, real(dp), dimension(  n), intent(out)e)"

.PP
Find positive diagonals D and E and a Lagrange multiplier F that minimize the row-sum +column-sum of masked terms, (D_i +log(|A_ij|) +E_j)^2 subject to the single constraint, sum_j E_j =0, where the mask permits only nonnegligible A_ij to participate in the quadratic quantities\&. Once a solution for D and E is found, return their exponentials, d and e, together with the rescaled matrix aa such that a = d\&.aa\&.e when d and e are interpreted as diagonal matrices\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP number of rows of A 
.br
\fIn\fP number of columns of A 
.br
\fImask\fP logical mask 
.br
\fIa\fP real rectangular matrix A 
.br
\fId\fP positive diagonal matrix of dimension m 
.br
\fIaa\fP rescaled version of A 
.br
\fIe\fP positive diagonal matrix of dimension n 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1440 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(3) pmat4::cross_product_d (real(dp), dimension(3), intent(in)a, real(dp), dimension(3), intent(in)b)\fC [private]\fP"

.PP
Return the cross product of two double precision real 3-vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector 
.br
\fIb\fP real type input 3-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
c result, double precision real 3-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 214 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(3) pmat4::cross_product_s (real(sp), dimension(3), intent(in)a, real(sp), dimension(3), intent(in)b)\fC [private]\fP"

.PP
Return the cross product of two single precision real 3-vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector 
.br
\fIb\fP real type input 3-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
c result, single precision real 3-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 201 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::ctoz\fP (real(dp), dimension(3), intent(in)v, complex(dpc), intent(out)z, logical, intent(out)infz)"

.PP
Utility codes for various Mobius transformations\&. If aa1,bb1,cc1,dd1 are the coefficients for one transformation, and aa2,bb2,cc2,dd2 are the coefficients for a second one, then the coefficients for the mapping of a test point, zz, by aa1 etc to zw, followed by a mapping of zw, by aa2 etc to zv, is equivalent to a single mapping zz-->zv by the transformatn with coefficients aa3,bb3,cc3,dd3, such that, as 2*2 complex matrices:
.PP
.PP
.nf

 [ aa3, bb3 ]   [ aa2, bb2 ]   [ aa1, bb1 ]
 [          ] = [          ] * [          ]
 [ cc3, dd3 ]   [ cc2, dd2 ]   [ cc1, dd1 ] \&.
 
.fi
.PP
.PP
Note that the determinant of these matrices is always +1\&. Given a cartesian 3-vector representation of a point on the Riemann unit sphere, return the stereographically equivalent complex number\&.
.PP
\fBParameters:\fP
.RS 4
\fIv\fP cartesian 3-vector representation of point on Riemann sphere 
.br
\fIz\fP complex point stereographically equivalent to v 
.br
\fIinfz\fP logical indicator for z being the point at infinity 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2026 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::det_d (real(dp), dimension(:,:), intent(in)a)"

.PP
Return the determinant of a double precision matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input matrix A 
.RE
.PP
\fBReturns:\fP
.RS 4
det result, determinant of matrix A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 368 of file pmat4\&.f90\&.
.SS "integer(spi) function pmat4::det_i (integer(spi), dimension(:,:), intent(in)a)"

.PP
Return the determinant of a single precision integer matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP integer type input matrix A 
.RE
.PP
\fBReturns:\fP
.RS 4
idet result, determinant of matrix A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 389 of file pmat4\&.f90\&.
.SS "integer(dpi) function pmat4::det_id (integer(dpi), dimension(:,:), intent(in)a)\fC [private]\fP"

.PP
Return the determinant of a double precision integer matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP integer type input matrix A 
.RE
.PP
\fBReturns:\fP
.RS 4
idet result, determinant of matrix A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 403 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::det_s (real(sp), dimension(:,:), intent(in)a)\fC [private]\fP"

.PP
Return the determinant of a single precision matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input matrix A 
.RE
.PP
\fBReturns:\fP
.RS 4
det result, determinant of matrix A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 347 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a),size(a)) pmat4::diagn_d (real(dp), dimension(:), intent(in)a)"

.PP
Return the diagonal matrix whose elements are the given vector\&. Double precision version
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector A listing the diagonal elements 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, diagonal matrix with the elements of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 491 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(size(a),size(a)) pmat4::diagn_i (integer(spi), dimension(:), intent(in)a)"

.PP
Return the diagonal matrix whose elements are the given vector\&. Integer version\&.
.PP
\fBParameters:\fP
.RS 4
\fIa\fP integer input vector A listing the diagonal elements 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, diagonal matrix with the elements of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 507 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(a),size(a)) pmat4::diagn_s (real(sp), dimension(:), intent(in)a)"

.PP
Return the diagonal matrix whose elements are the given vector\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector A listing the diagonal elements 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, diagonal matrix with the elements of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 475 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(b,1)) pmat4::diagnn_d (real(dp), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the vector whose elements are the diagonal ones of a given matrix\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input matrix 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, vector listing the diagonal elements of the given matrix\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 537 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(size(b,1)) pmat4::diagnn_i (integer(spi), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the vector whose elements are the diagonal ones of a given matrix\&. Integer version\&.
.PP
\fBParameters:\fP
.RS 4
\fIb\fP integer type input matrix 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, vector listing the diagonal elements of the given matrix\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 552 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(b,1)) pmat4::diagnn_s (real(sp), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the vector whose elements are the diagonal ones of a given matrix\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input matrix 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, vector listing the diagonal elements of the given matrix\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 522 of file pmat4\&.f90\&.
.SS "subroutine pmat4::dlltoxy_d (real(dp), intent(in)rlat, real(dp), intent(in)drlat, real(dp), intent(in)drlon, real(dp), dimension(2), intent(out)x2)"

.PP
From a reference latitude, and increments of latitude and longitude, return the local cartesian 2-vector corresponding to the projection of the increment onto the tangent plane of the reference point\&. Double precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlat\fP latitude 
.br
\fIdrlon\fP longitudes 
.br
\fIx2\fP output 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 935 of file pmat4\&.f90\&.
.SS "subroutine pmat4::dlltoxy_s (real(sp), intent(in)rlat, real(sp), intent(in)drlat, real(sp), intent(in)drlon, real(sp), dimension(2), intent(out)x2)\fC [private]\fP"

.PP
From a reference latitude, and increments of latitude and longitude, return the local cartesian 2-vector corresponding to the projection of the increment onto the tangent plane of the reference point\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlat\fP latitude 
.br
\fIdrlon\fP longitudes 
.br
\fIx2\fP output 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 915 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::dqarea_d (real(dp), intent(in)rlat, real(dp), intent(in)drlata, real(dp), intent(in)drlona, real(dp), intent(in)drlatb, real(dp), intent(in)drlonb, real(dp), intent(in)drlatc, real(dp), intent(in)drlonc)\fC [private]\fP"

.PP
Compute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C in turn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. The computations are designed to give a proportionately accurate area estimate even when the quadrilateral is very small, provided the diagonal making the B-increment is not disproportionately small compared to the characteristic size of the quadrilateral\&. Double precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude of reference point 
.br
\fIdrlata\fP incremental latitude of point A 
.br
\fIdrlona\fP incremental longitude of point A 
.br
\fIdrlatb\fP incremental latitude of point B 
.br
\fIdrlonb\fP incremental longitude of point B 
.br
\fIdrlatc\fP incremental latitude of point C 
.br
\fIdrlonc\fP incremental longitude of point C 
.RE
.PP
\fBReturns:\fP
.RS 4
area 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 896 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::dqarea_s (real(sp), intent(in)rlat, real(sp), intent(in)drlata, real(sp), intent(in)drlona, real(sp), intent(in)drlatb, real(sp), intent(in)drlonb, real(sp), intent(in)drlatc, real(sp), intent(in)drlonc)"

.PP
Compute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C in turn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. The computations are designed to give a proportionately accurate area estimate even when the quadrilateral is very small, provided the diagonal making the B-increment is not disproportionately small compared to the characteristic size of the quadrilateral\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude of reference point 
.br
\fIdrlata\fP incremental latitude of point A 
.br
\fIdrlona\fP incremental longitude of point A 
.br
\fIdrlatb\fP incremental latitude of point B 
.br
\fIdrlonb\fP incremental longitude of point B 
.br
\fIdrlatc\fP incremental latitude of point C 
.br
\fIdrlonc\fP incremental longitude of point C 
.RE
.PP
\fBReturns:\fP
.RS 4
area result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 867 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::dtarea_d (real(dp), intent(in)rlat, real(dp), intent(in)drlata, real(dp), intent(in)drlona, real(dp), intent(in)drlatb, real(dp), intent(in)drlonb)"

.PP
Compute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. The computations are designed to give a proportionately accurate area estimate even when the triangle is very small, provided the B-increment is not disproportionately small compared to the other two sides\&. Double precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude of reference point 
.br
\fIdrlata\fP incremental latitude of A 
.br
\fIdrlona\fP incremental longitude of A 
.br
\fIdrlatb\fP incremental latitude of B 
.br
\fIdrlonb\fP incremental longitude of B 
.RE
.PP
\fBReturns:\fP
.RS 4
area result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 824 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::dtarea_s (real(sp), intent(in)rlat, real(sp), intent(in)drlata, real(sp), intent(in)drlona, real(sp), intent(in)drlatb, real(sp), intent(in)drlonb)\fC [private]\fP"

.PP
Compute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. The computations are designed to give a proportionately accurate area estimate even when the triangle is very small, provided the B-increment is not disproportionately small compared to the other two sides\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIrlat\fP latitude of reference point 
.br
\fIdrlata\fP incremental latitude of A 
.br
\fIdrlona\fP incremental longitude of A 
.br
\fIdrlatb\fP incremental latitude of B 
.br
\fIdrlonb\fP incremental longitude of B 
.RE
.PP
\fBReturns:\fP
.RS 4
area result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 785 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::expmat\fP (integer(spi), intent(in)n, real(dp), dimension(n,n), intent(in)a, real(dp), dimension(n,n), intent(out)b, real(dp), intent(out)detb)"

.PP
Evaluate the exponential, B, of a matrix, A, of degree n\&. Apply the iterated squaring method, m times, to the approximation to exp(A/(2**m)) obtained as a Taylor expansion of degree L See Fung, T\&. C\&., 2004, Int\&. J\&. Numer\&. Meth\&. Engng, 59, 1273--1286\&.
.PP
\fBParameters:\fP
.RS 4
\fIn\fP order of square matrix A 
.br
\fIa\fP input matrix A 
.br
\fIb\fP matrix B, the exponential of matrix A 
.br
\fIdetb\fP determinant of matrix B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1728 of file pmat4\&.f90\&.
.SS "subroutine pmat4::expmatd (integer(spi), intent(in)n, real(dp), dimension(n,n), intent(in)a, real(dp), dimension(n,n), intent(out)b, real(dp), dimension(n,n,(n*(n+1))/2), intent(out)bd, real(dp), intent(out)detb, real(dp), dimension((n*(n+1))/2), intent(out)detbd)"

.PP
Like expmat, but for the 1st derivatives also\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP order of square matrix A 
.br
\fIa\fP input matrix A 
.br
\fIb\fP matrix B, the exponential of matrix A 
.br
\fIbd\fP derivative of B wrt elements of A 
.br
\fIdetb\fP determinant of matrix B 
.br
\fIdetbd\fP derivative of detb wrt elements of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1766 of file pmat4\&.f90\&.
.SS "subroutine pmat4::expmatdd (integer(spi), intent(in)n, real(dp), dimension(n,n), intent(in)a, real(dp), dimension(n,n), intent(out)b, real(dp), dimension(n,n,(n*(n+1))/2), intent(out)bd, real(dp), dimension(n,n,(n*(n+1))/2,(n*(n+1))/2), intent(out)bdd, real(dp), intent(out)detb, real(dp), dimension((n*(n+1))/2), intent(out)detbd, real(dp), dimension((n*(n+1))/2,(n*(n+1))/2), intent(out)detbdd)"

.PP
Like expmat, but for the 1st and 2nd derivatives also\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP order of the matrix A 
.br
\fIa\fP input matrix A 
.br
\fIb\fP matrix B, exponential of matrix A 
.br
\fIbd\fP derivative of B wrt elements of A 
.br
\fIbdd\fP 2nd derivative of B wrt elements of A 
.br
\fIdetb\fP determinant of matrix B 
.br
\fIdetbd\fP derivative of detb wrt elements of A 
.br
\fIdetbdd\fP 2nd derivative of detb wrt elements of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1833 of file pmat4\&.f90\&.
.SS "subroutine pmat4::gram_d (real(dp), dimension(:,:), intent(in)as, real(dp), dimension(:,:), intent(out)b, integer(spi), intent(out)nrank, real(dp), intent(out)det)"

.PP
Apply a form of Gram-Schmidt orthogonalization process to return as many normalized orthogonal basis column vectors in matrix B as possible in the space spanned by the columns of matrix A\&. The number of columns returned is the rank, nrank, of A, and the determinant of the projection of A into the subspace of B is returned as det\&.
.PP
\fBParameters:\fP
.RS 4
\fIas\fP given matrix A 
.br
\fIb\fP matrix B containing nrank orthonormal column vectors 
.br
\fInrank\fP rank of A 
.br
\fIdet\fP determinant of projection of A into subspace of B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1077 of file pmat4\&.f90\&.
.SS "subroutine pmat4::gram_s (real(sp), dimension(:,:), intent(in)as, real(sp), dimension(:,:), intent(out)b, integer(spi), intent(out)nrank, real(sp), intent(out)det)"

.PP
Apply a form of Gram-Schmidt orthogonalization process to return as many normalized orthogonal basis column vectors in matrix B as possible in the space spanned by the columns of matrix A\&. The number of columns returned is the rank, nrank, of A, and the determinant of the projection of A into the subspace of B is returned as det\&.
.PP
\fBParameters:\fP
.RS 4
\fIas\fP given matrix A 
.br
\fIb\fP matrix B containing nrank orthonormal column vectors 
.br
\fInrank\fP rank of A 
.br
\fIdet\fP determinant of projection of A into subspace of B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1006 of file pmat4\&.f90\&.
.SS "subroutine pmat4::graml_d (real(dp), dimension(:,:), intent(in)as, real(dp), dimension(:,:), intent(out)b, integer(spi), intent(out)nrank, integer(spi), intent(out)detsign, real(dp), intent(out)ldet)"

.PP
A version of gram_d where the determinant information is returned in logarithmic form (to avoid overflows for large matrices)\&. When the matrix is singular, the 'sign' of the determinant, detsign, is returned as zero (instead of either +1 or -1) and ldet is then just the log of the nonzero factors found by the process\&.
.PP
\fBParameters:\fP
.RS 4
\fIas\fP given matrix A 
.br
\fIb\fP matrix B of orthonormal columns 
.br
\fInrank\fP rank of A 
.br
\fIdetsign\fP sign of determinant 
.br
\fIldet\fP logarithm of absolute value of determinant 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1149 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::hav_d (real(dp), intent(in)t)"

.PP
Haversine function in double precision\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt\fP input argument 
.RE
.PP
\fBReturns:\fP
.RS 4
a result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 963 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::hav_s (real(sp), intent(in)t)"

.PP
Haversine function in single precision\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt\fP input argument 
.RE
.PP
\fBReturns:\fP
.RS 4
a result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 950 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::huarea_d (real(dp), intent(in)sa, real(dp), intent(in)sb)\fC [private]\fP"

.PP
Spherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb, sphere of unit radius\&. Double precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIsa\fP orthographic projection of triangle's side A 
.br
\fIsb\fP orthographic projection of triangle's side B 
.RE
.PP
\fBReturns:\fP
.RS 4
area (steradians) of the right-angle spherical triangle 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 647 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::huarea_s (real(sp), intent(in)sa, real(sp), intent(in)sb)\fC [private]\fP"

.PP
Spherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb, sphere of unit radius\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIsa\fP orthographic projection of triangle's side A 
.br
\fIsb\fP orthographic projection of triangle's side B 
.RE
.PP
\fBReturns:\fP
.RS 4
area (steradians) of the right-angle spherical triangle 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 629 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(3,3) pmat4::identity3_i ()\fC [private]\fP"

.PP
Return the 3-dimensional integer identity matrix\&. 
.PP
\fBReturns:\fP
.RS 4
a result, identity matrix in 3 dimensions\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 614 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(n,n) pmat4::identity_i (integer(spi), intent(in)n)\fC [private]\fP"

.PP
Return the integer identity matrix for a given dimensionality\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP input integer dimensionality 
.RE
.PP
\fBReturns:\fP
.RS 4
a result, identity matrix of the given dimensionality 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 602 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(0:3), public \fBpmat4::mulqq\fP (real(dp), dimension(0:3), intent(in)a, real(dp), dimension(0:3), intent(in)b)"

.PP
Multiply quaternions, a*b, assuming operation performed from right to left\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP input quaternion 
.br
\fIb\fP input quaternion 
.RE
.PP
\fBReturns:\fP
.RS 4
c result quaternion a*b 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1708 of file pmat4\&.f90\&.
.SS "subroutine pmat4::normalize_d (real(dp), dimension(:), intent(inout)v)"

.PP
Normalize the given double precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 987 of file pmat4\&.f90\&.
.SS "subroutine pmat4::normalize_s (real(sp), dimension(:), intent(inout)v)"

.PP
Normalize the given single precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 975 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a)) pmat4::normalized_d (real(dp), dimension(:), intent(in)a)"

.PP
Return the normalized version of a double precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, double precision real vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 156 of file pmat4\&.f90\&.
.PP
References pmat4::absv::absv_d()\&.
.SS "real(sp) function, dimension(size(a)) pmat4::normalized_s (real(sp), dimension(:), intent(in)a)\fC [private]\fP"

.PP
Return the normalized version of a single precision real vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, single precision real vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 142 of file pmat4\&.f90\&.
.PP
References pmat4::absv::absv_s()\&.
.SS "real(dp) function, dimension(size(u)) pmat4::orthogonalized_d (real(dp), dimension(:), intent(in)u, real(dp), dimension(:), intent(in)a)\fC [private]\fP"

.PP
Return the part of vector a that is orthogonal to unit vector u\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP real type input unit vector 
.br
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, double precision real vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 186 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(u)) pmat4::orthogonalized_s (real(sp), dimension(:), intent(in)u, real(sp), dimension(:), intent(in)a)"

.PP
Return the part of vector a that is orthogonal to unit vector u\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP real type input unit vector 
.br
\fIa\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
b result, single precision real vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 171 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a),size(b)) pmat4::outer_product_d (real(dp), dimension(:), intent(in)a, real(dp), dimension(:), intent(in)b)\fC [private]\fP"

.PP
Return the outer product matrix of two double precision real vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.br
\fIb\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
c result, rank-1 matrix outer product 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 288 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(size(a),size(b)) pmat4::outer_product_i (integer(spi), dimension(:), intent(in)a, integer(spi), dimension(:), intent(in)b)\fC [private]\fP"

.PP
Return the outer product matrix of two integer vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP integer type input vector 
.br
\fIb\fP integer type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
c result, rank-1 matrix outer product 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 304 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(a),size(b)) pmat4::outer_product_s (real(sp), dimension(:), intent(in)a, real(sp), dimension(:), intent(in)b)\fC [private]\fP"

.PP
Return the outer product matrix of two single precision real vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input vector 
.br
\fIb\fP real type input vector 
.RE
.PP
\fBReturns:\fP
.RS 4
c result, rank-1 matrix outer product 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 272 of file pmat4\&.f90\&.
.SS "subroutine pmat4::plaingram_d (real(dp), dimension(:,:), intent(inout)b, integer(spi), intent(out)nrank)"

.PP
A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. Double precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIb\fP input as given matrix, output as orthogonalized vectors 
.br
\fInrank\fP effective rank of given matrix 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1262 of file pmat4\&.f90\&.
.SS "subroutine pmat4::plaingram_s (real(sp), dimension(:,:), intent(inout)b, integer(spi), intent(out)nrank)"

.PP
A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. Single precision version\&.
.PP
\fBParameters:\fP
.RS 4
\fIb\fP input as given matrix, output as orthogonalized vectors 
.br
\fInrank\fP effective rank of given matrix 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1226 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtoax\fP (real(dp), dimension(0:3), intent(in)q, real(dp), dimension(3), intent(out)v)"

.PP
Go from quaternion to axial 3-vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIq\fP quaternion 
.br
\fIv\fP axial 3-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1671 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtorot\fP (real(dp), dimension(0:3), intent(in)q, real(dp), dimension(3,3), intent(out)rot)"

.PP
Go from quaternion to rotation matrix representations\&. 
.PP
\fBParameters:\fP
.RS 4
\fIq\fP quaternion representation 
.br
\fIrot\fP rotation matrix representations 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1645 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtospin\fP (real(dp), dimension(0:3), intent(in)q, complex(dpc), dimension(2,2), intent(out)cspin)"

.PP
Go from the unit quaternion to the complex spinor representation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIq\fP given unit quaternion representation 
.br
\fIcspin\fP spinor representation 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1574 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::rottoax\fP (real(dp), dimension(3,3), intent(in)orth33, real(dp), dimension(3), intent(out)ax3)"

.PP
Assuming that given orth33 is a 3*3 proper rotation matrix, derive an axial 3-vector, ax3, such that orth33 is implied by ax3 when the latter is interpreted as encoding a rotation (as in subroutine axtorot)\&. Note that such ax3 are not unique -- adding any multiple of 2*pi times the parallel unit vector leads to the same orth33\&.
.PP
\fBParameters:\fP
.RS 4
\fIorth33\fP 3*3 proper rotation matrix 
.br
\fIax3\fP axial 3-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1517 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::rottoq\fP (real(dp), dimension(3,3), intent(in)rot, real(dp), dimension(0:3), intent(out)q)"

.PP
Go from rotation matrix to a corresponding unit quaternion representation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrot\fP given rotation matrix 
.br
\fIq\fP quaternion representation 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1589 of file pmat4\&.f90\&.
.SS "subroutine pmat4::rowgram (integer(spi), intent(in)m, integer(spi), intent(in)n, real(dp), dimension(m,n), intent(in)a, integer(spi), dimension(n), intent(out)ipiv, real(dp), dimension(m,n), intent(out)tt, real(dp), dimension(n,n), intent(out)b, integer(spi), intent(out)rank)"

.PP
Without changing (tall) rectangular input matrix a, perform pivoted gram- Schmidt operations to orthogonalize the rows, until rows that remain become negligible\&. Record the pivoting sequence in ipiv, and the row-normalization in tt(j,j) and the row-orthogonalization in tt(i,j), for i>j\&. Note that tt(i,j)=0 for i<j (tt is truncated lower triangular)\&. The orthonormalized rows are returned in square array b, which is complete even when the effective rank < n\&. The recorded row operations can be repeated on independent column vectors through the use of subroutine ROWOPS (in this module)\&. It is recommended to rescale the original matrix A via a call to CORRAL (in this module) because the negligibility criterion depends upon an 'epsilon' value that is fixed (10**(-13)) and assumes elements of a are never too different in magnitude from unity, unless they are actually zero\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP number of rows of A 
.br
\fIn\fP number of columns of A 
.br
\fIa\fP rectangular input matrix A 
.br
\fIipiv\fP pivoting sequence 
.br
\fItt\fP row-normalization 
.br
\fIb\fP orthonormalized rows 
.br
\fIrank\fP effective rank of A 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1314 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::rowops\fP (integer(spi), intent(in)m, integer(spi), intent(in)n, integer(spi), dimension(n), intent(in)ipiv, real(dp), dimension(m,n), intent(in)tt, real(dp), dimension(m), intent(in)v, real(dp), dimension(m), intent(out)vv)"

.PP
Apply the row-operations, implied by ipiv and tt returned by rowgram, to the single column vector, v, to produce the transformed vector vv\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP number of rows of matrix tt, dimension of vectors V and VV 
.br
\fIn\fP number of columns of matrix tt 
.br
\fIipiv\fP integer vector encoding the pivoting sequence 
.br
\fItt\fP row-normalized matrix provided by subroutine rowgram 
.br
\fIv\fP input single column vector 
.br
\fIvv\fP output column vector vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1399 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::sarea_d (real(dp), dimension(3), intent(in)v1, real(dp), dimension(3), intent(in)v2, real(dp), dimension(3), intent(in)v3)\fC [private]\fP"

.PP
Compute the area of the spherical triangle, {v1,v2,v3}\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP unit-3-vector vertex of the spherical triangle 
.br
\fIv2\fP unit-3-vector vertex of the spherical triangle 
.br
\fIv3\fP unit-3-vector vertex of the spherical triangle 
.RE
.PP
\fBReturns:\fP
.RS 4
area result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 722 of file pmat4\&.f90\&.
.PP
References cyclic()\&.
.SS "real(sp) function pmat4::sarea_s (real(sp), dimension(3), intent(in)v1, real(sp), dimension(3), intent(in)v2, real(sp), dimension(3), intent(in)v3)\fC [private]\fP"

.PP
Compute the area of the spherical triangle, {v1,v2,v3}, measured in the right-handed sense, by dropping a perpendicular to u0 on the longest side so that the area becomes the sum of areas of the two simpler right-angled triangles\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP area of the spherical triangle 
.br
\fIv2\fP area of the spherical triangle 
.br
\fIv3\fP area of the spherical triangle 
.RE
.PP
\fBReturns:\fP
.RS 4
area result 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 667 of file pmat4\&.f90\&.
.PP
References cyclic()\&.
.SS "subroutine \fBpmat4::setem\fP (real(dp), intent(in)c, real(dp), intent(in)d, real(dp), intent(in)e, real(dp), intent(in)g, real(dp), dimension(3,3), intent(out)r)\fC [private]\fP"

.PP
Given the 4 components of a unit quaternion, return the associated 3*3 rotation matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIc\fP 0th component of given quaternion 
.br
\fId\fP 1st component of given quaternion 
.br
\fIe\fP 2nd component of given quaternion 
.br
\fIg\fP 3rd component of given quaternion 
.br
\fIr\fP output 3*3 real rotation matrix 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1689 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::setmobius\fP (real(dp), dimension(3), intent(in)xc0, real(dp), dimension(3), intent(in)xc1, real(dp), dimension(3), intent(in)xc2, complex(dpc), intent(out)aa, complex(dpc), intent(out)bb, complex(dpc), intent(out)cc, complex(dpc), intent(out)dd)"

.PP
Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, for a standard (north-)polar stereographic transformation that takes cartesian point, xc0 to the north pole, xc1 to (lat=0,lon=0), xc2 to the south pole (=complex infinity)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIxc0\fP cartesian point that will map to (0,0,1) 
.br
\fIxc1\fP cartesian point that will map to (1,0,0) 
.br
\fIxc2\fP cartesian point that will map to (0,0,-1) 
.br
\fIaa\fP Mobius transformation complex coefficient 
.br
\fIbb\fP Mobius transformation complex coefficient 
.br
\fIcc\fP Mobius transformation complex coefficient 
.br
\fIdd\fP Mobius transformation complex coefficient 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2122 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::spintoq\fP (complex(dpc), dimension(2,2), intent(in)cspin, real(dp), dimension(0:3), intent(out)q)"

.PP
Go from the complex spinor matrix to the unit quaternion representation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcspin\fP complex spinor representation 
.br
\fIq\fP unit quaternion representation 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1561 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::trace_d (real(dp), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the trace of a given double precision real matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input matrix B 
.RE
.PP
\fBReturns:\fP
.RS 4
s result, trace, or sum of diagonal elements, of B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 578 of file pmat4\&.f90\&.
.SS "integer(spi) function pmat4::trace_i (integer(spi), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the trace of a given integer matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP integer type input matrix B 
.RE
.PP
\fBReturns:\fP
.RS 4
s result, trace, or sum of diagonal elements, of B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 590 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::trace_s (real(sp), dimension(:,:), intent(in)b)\fC [private]\fP"

.PP
Return the trace of a given single precision real matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP real type input matrix B 
.RE
.PP
\fBReturns:\fP
.RS 4
s result, trace, or sum of diagonal elements, of B 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 566 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(4) pmat4::triple_cross_product_d (real(dp), dimension(4), intent(in)u, real(dp), dimension(4), intent(in)v, real(dp), dimension(4), intent(in)w)\fC [private]\fP"

.PP
Return the triple_cross_product for 4-vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP real type input 4-vector 
.br
\fIv\fP real type input 4-vector 
.br
\fIw\fP real type input 4-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
x result, triple-cross-product 4-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 252 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(4) pmat4::triple_cross_product_s (real(sp), dimension(4), intent(in)u, real(sp), dimension(4), intent(in)v, real(sp), dimension(4), intent(in)w)\fC [private]\fP"

.PP
Deliver the triple-cross-product, x, of the three 4-vectors, u, v, w, with the sign convention that ordered, {u,v,w,x} form a right-handed quartet in the generic case (determinant >= 0)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP real type input 4-vector 
.br
\fIv\fP real type input 4-vector 
.br
\fIw\fP real type input 4-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
x result, triple-cross-product 4-vector 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 231 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::triple_product_d (real(dp), dimension(3), intent(in)a, real(dp), dimension(3), intent(in)b, real(dp), dimension(3), intent(in)c)\fC [private]\fP"

.PP
Return the triple product of three double precision real 3-vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector 
.br
\fIb\fP real type input 3-vector 
.br
\fIc\fP real type input 3-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
tripleproduct result, scalar triple product 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 335 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::triple_product_s (real(sp), dimension(3), intent(in)a, real(sp), dimension(3), intent(in)b, real(sp), dimension(3), intent(in)c)\fC [private]\fP"

.PP
Return the triple product of three single precision real 3-vectors\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP real type input 3-vector 
.br
\fIb\fP real type input 3-vector 
.br
\fIc\fP real type input 3-vector 
.RE
.PP
\fBReturns:\fP
.RS 4
tripleproduct result, scalar triple product 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 321 of file pmat4\&.f90\&.
.SS "subroutine pmat4::zmobius (complex(dpc), intent(in)aa, complex(dpc), intent(in)bb, complex(dpc), intent(in)cc, complex(dpc), intent(in)dd, complex(dpc), intent(in)z, logical, intent(in)infz, complex(dpc), intent(out)w, logical, intent(out)infw)\fC [private]\fP"

.PP
Perform a complex Mobius transformation from (z,infz) to (w,infw) where the transformation coefficients are the standard aa,bb,cc,dd\&. Infz is \&.TRUE\&. only when z is at complex infinity; likewise infw and w\&. For these infinite cases, it is important that numerical z==(0,0)\&.
.PP
\fBParameters:\fP
.RS 4
\fIaa\fP Mobius transformation complex coefficient 
.br
\fIbb\fP Mobius transformation complex coefficient 
.br
\fIcc\fP Mobius transformation complex coefficient 
.br
\fIdd\fP Mobius transformation complex coefficient 
.br
\fIz\fP complex input argument of the Mobius transformation 
.br
\fIinfz\fP logical indicator for z being a point at infinity 
.br
\fIw\fP complex output of the Mobius transformation 
.br
\fIinfw\fP logical indicator for w being a point at infinity 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2276 of file pmat4\&.f90\&.
.SS "subroutine pmat4::zmobiusi (complex(dpc), intent(in)aa, complex(dpc), intent(in)bb, complex(dpc), intent(in)cc, complex(dpc), intent(in)dd, complex(dpc), intent(in)zz, logical, intent(in)infz, complex(dpc), intent(out)zw, logical, intent(out)infw)\fC [private]\fP"

.PP
Perform the inverse of the mobius transformation with coefficients, {aa,bb,cc,dd}\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaa\fP inverse Mobius transformation coefficient 
.br
\fIbb\fP inverse Mobius transformation coefficient 
.br
\fIcc\fP inverse Mobius transformation coefficient 
.br
\fIdd\fP inverse Mobius transformation coefficient 
.br
\fIzz\fP complex input argument 
.br
\fIinfz\fP logical indicator for zz the point at infinity 
.br
\fIzw\fP complex output argument 
.br
\fIinfw\fP logical indicator for zw the point at infinity 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2335 of file pmat4\&.f90\&.
.PP
References pmat4::mobius::zmobius()\&.
.SS "subroutine, public \fBpmat4::znfun\fP (integer(spi), intent(in)n, real(dp), intent(in)z, real(dp), intent(out)zn, real(dp), intent(out)znd, real(dp), intent(out)zndd, real(dp), intent(out)znddd)"

.PP
For a given nonnegative integer n and real argument z, evaluate the nth,\&.\&.\&.,(n+3)th derivatives, wrt z, of the function C(z) = cosh(sqrt(2z)) or, equivalently, of C(z) = cos(sqrt(-2z)), according to the sign of z\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP integer order of the first of the returned derivatives of C\&. 
.br
\fIz\fP real input argument in the function C(z) 
.br
\fIzn\fP nth-derivative of C(z) 
.br
\fIznd\fP (n+1)th-derivative of C(z) 
.br
\fIzndd\fP (n+2)th-derivative of C(z) 
.br
\fIznddd\fP (n+3)th-derivative of C(z) 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1959 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::zntay\fP (integer(spi), intent(in)n, real(dp), intent(in)z, real(dp), intent(out)zn)"

.PP
Evaluate, by Taylor-Maclaurin expansion, the nth-derivative of the function, C(z)=cosh(sqrt(2z)), or equiavlently, of C(z)=cos(sqrt(-2z))\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP integer order of the derivative 
.br
\fIz\fP real argument 
.br
\fIzn\fP returned value of the nth derivative 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1920 of file pmat4\&.f90\&.
.SS "subroutine pmat4::zsetmobius (complex(dp), intent(in)z0, logical, intent(in)infz0, complex(dp), intent(in)z1, logical, intent(in)infz1, complex(dp), intent(in)z2, logical, intent(in)infz2, complex(dpc), intent(out)aa, complex(dpc), intent(out)bb, complex(dpc), intent(out)cc, complex(dpc), intent(out)dd)\fC [private]\fP"

.PP
Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, that takes polar stereographic point, z0 to the north pole, z1 to (lat=0,lon=0), z2 to the south pole (=complex infinity)\&. Should any one of z0,z1,z2 be itself the 'point at infinity' its corresponding infz will be set 'true' (and the z value itself not used)\&. This routine is like setmobius, except the three fixed points defining the mapping are given in standard complex stereographic form, together with the logical codes 'infzn' that are TRUE if that point is itself the projection pole (i\&.e\&., the South Pole for a north polar stereographic)\&.
.PP
\fBParameters:\fP
.RS 4
\fIz0\fP complex input point that will map to (0,0) 
.br
\fIinfz0\fP logical indicator that z0 is the point at infinity 
.br
\fIz1\fP complex input point that will map to (1,0) 
.br
\fIinfz1\fP logical indicator that z1 is the point at infinity 
.br
\fIz2\fP complex input point that will map to infinity 
.br
\fIinfz2\fP logical indicator that z2 is the point at infinity 
.br
\fIaa\fP Mobius transformation complex coefficient 
.br
\fIbb\fP Mobius transformation complex coefficient 
.br
\fIcc\fP Mobius transformation complex coefficient 
.br
\fIdd\fP Mobius transformation complex coefficient 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2205 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::ztoc\fP (complex(dpc), intent(in)z, logical, intent(in)infz, real(dp), dimension(3), intent(out)v)"

.PP
Given a complex z, return the equivalent cartesian unit 3-vector associated by the polar stereographic projection\&. 
.PP
\fBParameters:\fP
.RS 4
\fIz\fP complex input argument 
.br
\fIinfz\fP logical indicator for z being the point at infinity 
.br
\fIv\fP cartesian unit 3-vector position equivalent to z 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2052 of file pmat4\&.f90\&.
.SS "subroutine pmat4::ztocd (complex(dpc), intent(in)z, logical, intent(in)infz, real(dp), dimension(3), intent(out)v, complex(dpc), dimension(3), intent(out)vd)\fC [private]\fP"

.PP
The convention adopted for the complex derivative is that, for a complex infinitesimal map displacement, delta_z, the corresponding infinitesimal change of cartesian vector position is delta_v given by: delta_v = Real(vd*delta_z)\&. Thus, by a kind of Cauchy-Riemann relation, Imag(vd)=v CROSS Real(vd)\&.
.PP
\fBNote:\fP
.RS 4
The derivative for the ideal point at infinity has not been coded yet\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIz\fP complex input argument 
.br
\fIinfz\fP logical indicator for z being the point at infinity 
.br
\fIv\fP cartesian unit 3-vector position equivalent to z 
.br
\fIvd\fP derivative of cartesian v wrt z 
.RE
.PP
\fBAuthor:\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2082 of file pmat4\&.f90\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for grid_tools from the source code\&.
